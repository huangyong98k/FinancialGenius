(function($) { $.fn.jCountdown = function(options) { var defaults = { date: ['10:30:00', '14:30:00', '17:30:00', '20:00:00'], className: '', isTimer: 120, reloads: true, duration: 500, isZreo: false, shifts: '', title: '距下场更新：', text: ['天', '时', '分', '秒'] }; var options = $.extend(defaults, options);
        this.each(function() { new $.jCountdown(this, options) }); return this };
    $.jCountdown = function(target, options) { var datewrap = $(target); var dateID = datewrap.attr('id'); var $this = $('#' + dateID); var ds = '<div class="top"></div><div class="bottom"></div>'; var dt = '<div class="digit t">' + ds + '</div><div class="digit b">' + ds + '</div>'; var html = '<div class="countdown ' + options.className + '"><b class="icons icons-time"></b> <strong>' + options.title + '</strong>';
        html += '<ul class="date">';
        html += '<li class="dash days-dash">' + dt + '</li>';
        html += '<li class="txt days-txt">' + options.text[0] + '</li>';
        html += '<li class="dash hours-dash">' + dt + '</li>';
        html += '<li class="txt hours-txt">' + options.text[1] + '</li>';
        html += '<li class="dash minutes-dash">' + dt + '</li>';
        html += '<li class="txt minutes-txt">' + options.text[2] + '</li>';
        html += '<li class="dash seconds-dash">' + dt + '</li>';
        html += '<li class="txt seconds-txt">' + options.text[3] + '</li>';
        html += '</ul></div>';
        datewrap.html(html).show(); var daysDash = datewrap.find('.days-dash'); var daysText = datewrap.find('.days-txt'); var dashChange = function(dash, n) { var d2 = n % 10; var d1 = (n - n % 10) / 10; if ($('#' + dateID + ' .' + dash)) { digitChange('#' + dateID + ' .' + dash + ' .digit:first', d1);
                digitChange('#' + dateID + ' .' + dash + ' .digit:last', d2) } }; var digitChange = function(digit, n) { var dtop = $(digit + ' .top'); var dbottom = $(digit + ' .bottom'); if (dtop.html() != n + '') { dtop.css({ 'display': 'none' });
                dtop.html((n ? n : '0')).slideDown(options.duration);
                dbottom.animate({ 'height': '' }, options.duration, function() { dbottom.html($(digit + ' .top').html());
                    dbottom.css({ 'display': 'block', 'height': '' });
                    $(digit + ' .top').hide().slideUp(10) }) } }; var runCountdown = function() { var startTime = ''; var date = new Date(); var time = date.getTime(); var week = date.getDay(); if (options.isZreo) { startTime = options.date } else { var am = Util.getDateStr(0, date) + ' ' + options.date[0]; var noon = Util.getDateStr(0, date) + ' ' + options.date[1]; var afternoon = Util.getDateStr(0, date) + ' ' + options.date[2]; var evening = Util.getDateStr(0, date) + ' ' + options.date[3]; if (week == 6) { startTime = Util.getDateStr(2, date) + ' ' + options.date[0] } else if (week == 0) { startTime = Util.getDateStr(1, date) + ' ' + options.date[0] } else if (week == 5 && time > new Date(evening)) { startTime = Util.getDateStr(3, date) + ' ' + options.date[0] } else { if (time < new Date(am)) { startTime = am } else if (time < new Date(noon)) { startTime = noon } else if (time < new Date(afternoon)) { startTime = afternoon } else if (time < new Date(evening)) { startTime = evening } else if (time > new Date(evening)) { startTime = Util.getDateStr(1, date) + ' ' + options.date[0] } } } var diffSecs = (new Date(startTime).getTime() - time) / 1000; var secs = Math.floor(diffSecs % 60); var mins = Math.floor((diffSecs / 60) % 60); var hours = Math.floor((diffSecs / 3600) % 24); var days = Math.floor((diffSecs / 3600) / 24); if (days > 0) { daysDash.show();
                daysText.show() } else { daysDash.hide();
                daysText.hide() }; var count = 0,
                interval; if (options.reloads) { if (secs <= 0 && mins <= 0 && hours <= 0 && days <= 0) { if (options.isZreo) { secs = mins = hours = days = 0;
                        clearInterval(interval) } else { datewrap.find('.countdown').hide();
                        datewrap.append(options.shifts);
                        datewrap.find('.refresh').show();
                        interval = setInterval(function() { count++; if (count > options.isTimer) { count = 0;
                                clearInterval(interval);
                                datewrap.find('.refresh').remove();
                                datewrap.find('.countdown').show() } }, 1000) } } };
            dashChange('seconds-dash', secs);
            dashChange('minutes-dash', mins);
            dashChange('hours-dash', hours);
            dashChange('days-dash', days);
            $.data($this[0], 'diffSecs', diffSecs); if (diffSecs > 0) { var e = $this; var t = setTimeout(function() { runCountdown() }, 1000);
                $.data(e[0], 'timer', t) } else if (cb = $.data($this[0], 'callback')) { $.data($this[0], 'callback')() } };
        runCountdown() } })(jQuery);